// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos_proto/cosmos.proto

#include "cosmos_proto/cosmos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace cosmos_proto {
PROTOBUF_CONSTEXPR InterfaceDescriptor::InterfaceDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InterfaceDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceDescriptorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceDescriptorDefaultTypeInternal() {}
  union {
    InterfaceDescriptor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceDescriptorDefaultTypeInternal _InterfaceDescriptor_default_instance_;
PROTOBUF_CONSTEXPR ScalarDescriptor::ScalarDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.field_type_)*/{}
  , /*decltype(_impl_._field_type_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ScalarDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarDescriptorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarDescriptorDefaultTypeInternal() {}
  union {
    ScalarDescriptor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarDescriptorDefaultTypeInternal _ScalarDescriptor_default_instance_;
}  // namespace cosmos_proto
static ::_pb::Metadata file_level_metadata_cosmos_5fproto_2fcosmos_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_5fproto_2fcosmos_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_cosmos_5fproto_2fcosmos_2eproto = nullptr;

const uint32_t TableStruct_cosmos_5fproto_2fcosmos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::InterfaceDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::InterfaceDescriptor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::InterfaceDescriptor, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::ScalarDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::ScalarDescriptor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::ScalarDescriptor, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::cosmos_proto::ScalarDescriptor, _impl_.field_type_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::cosmos_proto::InterfaceDescriptor)},
  { 8, -1, -1, sizeof(::cosmos_proto::ScalarDescriptor)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::cosmos_proto::_InterfaceDescriptor_default_instance_._instance,
  &::cosmos_proto::_ScalarDescriptor_default_instance_._instance,
};

const char descriptor_table_protodef_cosmos_5fproto_2fcosmos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031cosmos_proto/cosmos.proto\022\014cosmos_prot"
  "o\032 google/protobuf/descriptor.proto\"8\n\023I"
  "nterfaceDescriptor\022\014\n\004name\030\001 \001(\t\022\023\n\013desc"
  "ription\030\002 \001(\t\"c\n\020ScalarDescriptor\022\014\n\004nam"
  "e\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022,\n\nfield_ty"
  "pe\030\003 \003(\0162\030.cosmos_proto.ScalarType*X\n\nSc"
  "alarType\022\033\n\027SCALAR_TYPE_UNSPECIFIED\020\000\022\026\n"
  "\022SCALAR_TYPE_STRING\020\001\022\025\n\021SCALAR_TYPE_BYT"
  "ES\020\002:\?\n\024implements_interface\022\037.google.pr"
  "otobuf.MessageOptions\030\311\326\005 \003(\t::\n\021accepts"
  "_interface\022\035.google.protobuf.FieldOption"
  "s\030\311\326\005 \001(\t:/\n\006scalar\022\035.google.protobuf.Fi"
  "eldOptions\030\312\326\005 \001(\t:\\\n\021declare_interface\022"
  "\034.google.protobuf.FileOptions\030\275\2630 \003(\0132!."
  "cosmos_proto.InterfaceDescriptor:V\n\016decl"
  "are_scalar\022\034.google.protobuf.FileOptions"
  "\030\276\2630 \003(\0132\036.cosmos_proto.ScalarDescriptor"
  "B-Z+github.com/cosmos/cosmos-proto;cosmo"
  "s_protob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_5fproto_2fcosmos_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::_pbi::once_flag descriptor_table_cosmos_5fproto_2fcosmos_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cosmos_5fproto_2fcosmos_2eproto = {
    false, false, 735, descriptor_table_protodef_cosmos_5fproto_2fcosmos_2eproto,
    "cosmos_proto/cosmos.proto",
    &descriptor_table_cosmos_5fproto_2fcosmos_2eproto_once, descriptor_table_cosmos_5fproto_2fcosmos_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_cosmos_5fproto_2fcosmos_2eproto::offsets,
    file_level_metadata_cosmos_5fproto_2fcosmos_2eproto, file_level_enum_descriptors_cosmos_5fproto_2fcosmos_2eproto,
    file_level_service_descriptors_cosmos_5fproto_2fcosmos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cosmos_5fproto_2fcosmos_2eproto_getter() {
  return &descriptor_table_cosmos_5fproto_2fcosmos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cosmos_5fproto_2fcosmos_2eproto(&descriptor_table_cosmos_5fproto_2fcosmos_2eproto);
namespace cosmos_proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ScalarType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cosmos_5fproto_2fcosmos_2eproto);
  return file_level_enum_descriptors_cosmos_5fproto_2fcosmos_2eproto[0];
}
bool ScalarType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class InterfaceDescriptor::_Internal {
 public:
};

InterfaceDescriptor::InterfaceDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cosmos_proto.InterfaceDescriptor)
}
InterfaceDescriptor::InterfaceDescriptor(const InterfaceDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InterfaceDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos_proto.InterfaceDescriptor)
}

inline void InterfaceDescriptor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InterfaceDescriptor::~InterfaceDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos_proto.InterfaceDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InterfaceDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void InterfaceDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InterfaceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos_proto.InterfaceDescriptor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InterfaceDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos_proto.InterfaceDescriptor.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos_proto.InterfaceDescriptor.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InterfaceDescriptor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos_proto.InterfaceDescriptor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos_proto.InterfaceDescriptor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos_proto.InterfaceDescriptor.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos_proto.InterfaceDescriptor)
  return target;
}

size_t InterfaceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos_proto.InterfaceDescriptor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InterfaceDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InterfaceDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InterfaceDescriptor::GetClassData() const { return &_class_data_; }


void InterfaceDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InterfaceDescriptor*>(&to_msg);
  auto& from = static_cast<const InterfaceDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos_proto.InterfaceDescriptor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceDescriptor::CopyFrom(const InterfaceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos_proto.InterfaceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceDescriptor::IsInitialized() const {
  return true;
}

void InterfaceDescriptor::InternalSwap(InterfaceDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InterfaceDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_5fproto_2fcosmos_2eproto_getter, &descriptor_table_cosmos_5fproto_2fcosmos_2eproto_once,
      file_level_metadata_cosmos_5fproto_2fcosmos_2eproto[0]);
}

// ===================================================================

class ScalarDescriptor::_Internal {
 public:
};

ScalarDescriptor::ScalarDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:cosmos_proto.ScalarDescriptor)
}
ScalarDescriptor::ScalarDescriptor(const ScalarDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ScalarDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.field_type_){from._impl_.field_type_}
    , /*decltype(_impl_._field_type_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos_proto.ScalarDescriptor)
}

inline void ScalarDescriptor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.field_type_){arena}
    , /*decltype(_impl_._field_type_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ScalarDescriptor::~ScalarDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos_proto.ScalarDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ScalarDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field_type_.~RepeatedField();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
}

void ScalarDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ScalarDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos_proto.ScalarDescriptor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_type_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScalarDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos_proto.ScalarDescriptor.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "cosmos_proto.ScalarDescriptor.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .cosmos_proto.ScalarType field_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_field_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_field_type(static_cast<::cosmos_proto::ScalarType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ScalarDescriptor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos_proto.ScalarDescriptor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos_proto.ScalarDescriptor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos_proto.ScalarDescriptor.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // repeated .cosmos_proto.ScalarType field_type = 3;
  {
    int byte_size = _impl_._field_type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, _impl_.field_type_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos_proto.ScalarDescriptor)
  return target;
}

size_t ScalarDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos_proto.ScalarDescriptor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos_proto.ScalarType field_type = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_field_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_field_type(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._field_type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScalarDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScalarDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ScalarDescriptor::GetClassData() const { return &_class_data_; }


void ScalarDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ScalarDescriptor*>(&to_msg);
  auto& from = static_cast<const ScalarDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos_proto.ScalarDescriptor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.field_type_.MergeFrom(from._impl_.field_type_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarDescriptor::CopyFrom(const ScalarDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos_proto.ScalarDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarDescriptor::IsInitialized() const {
  return true;
}

void ScalarDescriptor::InternalSwap(ScalarDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.field_type_.InternalSwap(&other->_impl_.field_type_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cosmos_5fproto_2fcosmos_2eproto_getter, &descriptor_table_cosmos_5fproto_2fcosmos_2eproto_once,
      file_level_metadata_cosmos_5fproto_2fcosmos_2eproto[1]);
}
const std::string implements_interface_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedStringTypeTraits, 9, false>
  implements_interface(kImplementsInterfaceFieldNumber, implements_interface_default, nullptr);
const std::string accepts_interface_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  accepts_interface(kAcceptsInterfaceFieldNumber, accepts_interface_default, nullptr);
const std::string scalar_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false>
  scalar(kScalarFieldNumber, scalar_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FileOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::cosmos_proto::InterfaceDescriptor >, 11, false>
  declare_interface(kDeclareInterfaceFieldNumber, ::cosmos_proto::InterfaceDescriptor::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::PROTOBUF_NAMESPACE_ID::FileOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedMessageTypeTraits< ::cosmos_proto::ScalarDescriptor >, 11, false>
  declare_scalar(kDeclareScalarFieldNumber, ::cosmos_proto::ScalarDescriptor::default_instance(), nullptr);

// @@protoc_insertion_point(namespace_scope)
}  // namespace cosmos_proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos_proto::InterfaceDescriptor*
Arena::CreateMaybeMessage< ::cosmos_proto::InterfaceDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos_proto::InterfaceDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos_proto::ScalarDescriptor*
Arena::CreateMaybeMessage< ::cosmos_proto::ScalarDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos_proto::ScalarDescriptor >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
