// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/clob/order_removals.proto

#include "dydxprotocol/clob/order_removals.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dydxprotocol {
namespace clob {
PROTOBUF_CONSTEXPR OrderRemoval::OrderRemoval(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id_)*/nullptr
  , /*decltype(_impl_.removal_reason_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderRemovalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderRemovalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderRemovalDefaultTypeInternal() {}
  union {
    OrderRemoval _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderRemovalDefaultTypeInternal _OrderRemoval_default_instance_;
}  // namespace clob
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2fclob_2forder_5fremovals_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dydxprotocol_2fclob_2forder_5fremovals_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dydxprotocol_2fclob_2forder_5fremovals_2eproto = nullptr;

const uint32_t TableStruct_dydxprotocol_2fclob_2forder_5fremovals_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dydxprotocol::clob::OrderRemoval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dydxprotocol::clob::OrderRemoval, _impl_.order_id_),
  PROTOBUF_FIELD_OFFSET(::dydxprotocol::clob::OrderRemoval, _impl_.removal_reason_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dydxprotocol::clob::OrderRemoval)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dydxprotocol::clob::_OrderRemoval_default_instance_._instance,
};

const char descriptor_table_protodef_dydxprotocol_2fclob_2forder_5fremovals_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&dydxprotocol/clob/order_removals.proto"
  "\022\021dydxprotocol.clob\032\024gogoproto/gogo.prot"
  "o\032\035dydxprotocol/clob/order.proto\"\376\003\n\014Ord"
  "erRemoval\0222\n\010order_id\030\001 \001(\0132\032.dydxprotoc"
  "ol.clob.OrderIdB\004\310\336\037\000\022E\n\016removal_reason\030"
  "\002 \001(\0162-.dydxprotocol.clob.OrderRemoval.R"
  "emovalReason\"\362\002\n\rRemovalReason\022\036\n\032REMOVA"
  "L_REASON_UNSPECIFIED\020\000\022&\n\"REMOVAL_REASON"
  "_UNDERCOLLATERALIZED\020\001\022&\n\"REMOVAL_REASON"
  "_INVALID_REDUCE_ONLY\020\002\0224\n0REMOVAL_REASON"
  "_POST_ONLY_WOULD_CROSS_MAKER_ORDER\020\003\022%\n!"
  "REMOVAL_REASON_INVALID_SELF_TRADE\020\004\022<\n8R"
  "EMOVAL_REASON_CONDITIONAL_FOK_COULD_NOT_"
  "BE_FULLY_FILLED\020\005\0225\n1REMOVAL_REASON_COND"
  "ITIONAL_IOC_WOULD_REST_ON_BOOK\020\006\022\037\n\033REMO"
  "VAL_REASON_FULLY_FILLED\020\007B8Z6github.com/"
  "dydxprotocol/v4-chain/protocol/x/clob/ty"
  "pesb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_deps[2] = {
  &::descriptor_table_dydxprotocol_2fclob_2forder_2eproto,
  &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::_pbi::once_flag descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto = {
    false, false, 691, descriptor_table_protodef_dydxprotocol_2fclob_2forder_5fremovals_2eproto,
    "dydxprotocol/clob/order_removals.proto",
    &descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_once, descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_deps, 2, 1,
    schemas, file_default_instances, TableStruct_dydxprotocol_2fclob_2forder_5fremovals_2eproto::offsets,
    file_level_metadata_dydxprotocol_2fclob_2forder_5fremovals_2eproto, file_level_enum_descriptors_dydxprotocol_2fclob_2forder_5fremovals_2eproto,
    file_level_service_descriptors_dydxprotocol_2fclob_2forder_5fremovals_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2fclob_2forder_5fremovals_2eproto(&descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto);
namespace dydxprotocol {
namespace clob {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OrderRemoval_RemovalReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto);
  return file_level_enum_descriptors_dydxprotocol_2fclob_2forder_5fremovals_2eproto[0];
}
bool OrderRemoval_RemovalReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_UNSPECIFIED;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_UNDERCOLLATERALIZED;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_INVALID_REDUCE_ONLY;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_INVALID_SELF_TRADE;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_CONDITIONAL_FOK_COULD_NOT_BE_FULLY_FILLED;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_CONDITIONAL_IOC_WOULD_REST_ON_BOOK;
constexpr OrderRemoval_RemovalReason OrderRemoval::REMOVAL_REASON_FULLY_FILLED;
constexpr OrderRemoval_RemovalReason OrderRemoval::RemovalReason_MIN;
constexpr OrderRemoval_RemovalReason OrderRemoval::RemovalReason_MAX;
constexpr int OrderRemoval::RemovalReason_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class OrderRemoval::_Internal {
 public:
  static const ::dydxprotocol::clob::OrderId& order_id(const OrderRemoval* msg);
};

const ::dydxprotocol::clob::OrderId&
OrderRemoval::_Internal::order_id(const OrderRemoval* msg) {
  return *msg->_impl_.order_id_;
}
void OrderRemoval::clear_order_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.order_id_ != nullptr) {
    delete _impl_.order_id_;
  }
  _impl_.order_id_ = nullptr;
}
OrderRemoval::OrderRemoval(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.clob.OrderRemoval)
}
OrderRemoval::OrderRemoval(const OrderRemoval& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderRemoval* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id_){nullptr}
    , decltype(_impl_.removal_reason_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_order_id()) {
    _this->_impl_.order_id_ = new ::dydxprotocol::clob::OrderId(*from._impl_.order_id_);
  }
  _this->_impl_.removal_reason_ = from._impl_.removal_reason_;
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.clob.OrderRemoval)
}

inline void OrderRemoval::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id_){nullptr}
    , decltype(_impl_.removal_reason_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OrderRemoval::~OrderRemoval() {
  // @@protoc_insertion_point(destructor:dydxprotocol.clob.OrderRemoval)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderRemoval::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.order_id_;
}

void OrderRemoval::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderRemoval::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.clob.OrderRemoval)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.order_id_ != nullptr) {
    delete _impl_.order_id_;
  }
  _impl_.order_id_ = nullptr;
  _impl_.removal_reason_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderRemoval::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.clob.OrderId order_id = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_order_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dydxprotocol.clob.OrderRemoval.RemovalReason removal_reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_removal_reason(static_cast<::dydxprotocol::clob::OrderRemoval_RemovalReason>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderRemoval::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.clob.OrderRemoval)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dydxprotocol.clob.OrderId order_id = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_order_id()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::order_id(this),
        _Internal::order_id(this).GetCachedSize(), target, stream);
  }

  // .dydxprotocol.clob.OrderRemoval.RemovalReason removal_reason = 2;
  if (this->_internal_removal_reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_removal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.clob.OrderRemoval)
  return target;
}

size_t OrderRemoval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.clob.OrderRemoval)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.clob.OrderId order_id = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_order_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.order_id_);
  }

  // .dydxprotocol.clob.OrderRemoval.RemovalReason removal_reason = 2;
  if (this->_internal_removal_reason() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_removal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderRemoval::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderRemoval::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderRemoval::GetClassData() const { return &_class_data_; }


void OrderRemoval::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderRemoval*>(&to_msg);
  auto& from = static_cast<const OrderRemoval&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.clob.OrderRemoval)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_order_id()) {
    _this->_internal_mutable_order_id()->::dydxprotocol::clob::OrderId::MergeFrom(
        from._internal_order_id());
  }
  if (from._internal_removal_reason() != 0) {
    _this->_internal_set_removal_reason(from._internal_removal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRemoval::CopyFrom(const OrderRemoval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.clob.OrderRemoval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderRemoval::IsInitialized() const {
  return true;
}

void OrderRemoval::InternalSwap(OrderRemoval* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderRemoval, _impl_.removal_reason_)
      + sizeof(OrderRemoval::_impl_.removal_reason_)
      - PROTOBUF_FIELD_OFFSET(OrderRemoval, _impl_.order_id_)>(
          reinterpret_cast<char*>(&_impl_.order_id_),
          reinterpret_cast<char*>(&other->_impl_.order_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderRemoval::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_getter, &descriptor_table_dydxprotocol_2fclob_2forder_5fremovals_2eproto_once,
      file_level_metadata_dydxprotocol_2fclob_2forder_5fremovals_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace clob
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::clob::OrderRemoval*
Arena::CreateMaybeMessage< ::dydxprotocol::clob::OrderRemoval >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::clob::OrderRemoval >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
